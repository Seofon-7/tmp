了解！我們來針對你提到的兩個問題做處理：

1. 點選 New（新增）要跳出小視窗填寫並儲存
	•	我們會使用 DevExpress 19.2 的 ASPxPopupControl 搭配 ASPxCallbackPanel 來實現「彈跳視窗」功能。
	•	使用者點擊「新增新值」或 Grid 裡的「新增」按鈕，彈窗會顯示讓使用者填寫，填寫完成後按儲存，資料寫入 Oracle，然後刷新 Grid。

2. 換頁時整個頁面變空白
	•	這通常是因為 GridView 的資料來源沒有被正確綁定。
	•	Page_Load 需要檢查 IsPostBack 時機，搭配 DataBind() 正確觸發。
	•	也可能與 CustomCallback 或 DataSource 綁定時機有關，我會幫你修正。

完整範例

1. ASPX 頁面

<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Default.aspx.cs" Inherits="Default" %>
<%@ Register Assembly="DevExpress.Web.v19.2" Namespace="DevExpress.Web" TagPrefix="dx" %>

<!DOCTYPE html>
<html>
<head runat="server">
    <title>Fab Eqp 管理系統</title>
    <link href="Style.css" rel="stylesheet" />
</head>
<body>
    <form id="form1" runat="server">
        <div class="container">

            <!-- Tab -->
            <dx:ASPxPageControl ID="TabControl" runat="server" Width="100%">
                <TabPages>
                    <dx:TabPage Text="Tab1" />
                    <dx:TabPage Text="Tab2" />
                </TabPages>
            </dx:ASPxPageControl>

            <!-- 新增按鈕 -->
            <div class="button-bar">
                <dx:ASPxButton ID="btnAddNew" runat="server" Text="新增新值" CssClass="btn-add"
                    AutoPostBack="false" OnClick="btnAddNew_Click">
                </dx:ASPxButton>
            </div>

            <!-- Grid -->
            <dx:ASPxGridView ID="GridView" runat="server" AutoGenerateColumns="False" KeyFieldName="ID"
                Width="100%" CssClass="grid" OnPageIndexChanged="GridView_PageIndexChanged">
                <SettingsPager PageSize="10" />
                <SettingsBehavior AllowFocusedRow="True" />
                <Columns>
                    <dx:GridViewCommandColumn ShowEditButton="true" ShowDeleteButton="true">
                        <CustomButtons>
                            <dx:GridViewCommandColumnCustomButton ID="btnEditPopup" Text="編輯" />
                        </CustomButtons>
                    </dx:GridViewCommandColumn>

                    <dx:GridViewDataTextColumn FieldName="FAB" Caption="Fab" />
                    <dx:GridViewDataTextColumn FieldName="EQP" Caption="Eqp" />
                    <dx:GridViewDataTextColumn FieldName="CHP" Caption="Chp" />
                    <dx:GridViewDataTextColumn FieldName="JOBS" Caption="Jobs" />
                </Columns>
            </dx:ASPxGridView>

            <!-- 新增/編輯 Popup -->
            <dx:ASPxPopupControl ID="popupForm" runat="server" Width="400px" HeaderText="資料編輯" PopupHorizontalAlign="WindowCenter" PopupVerticalAlign="WindowCenter">
                <ContentCollection>
                    <dx:PopupControlContentControl>
                        <dx:ASPxCallbackPanel ID="CallbackPanelForm" runat="server" OnCallback="CallbackPanelForm_Callback">
                            <PanelCollection>
                                <dx:PanelContent>
                                    <table class="popup-form">
                                        <tr>
                                            <td>Fab:</td>
                                            <td><dx:ASPxTextBox ID="txtFAB" runat="server" Width="200px" /></td>
                                        </tr>
                                        <tr>
                                            <td>Eqp:</td>
                                            <td><dx:ASPxTextBox ID="txtEQP" runat="server" Width="200px" MaxLength="5" /></td>
                                        </tr>
                                        <tr>
                                            <td>Chp:</td>
                                            <td><dx:ASPxTextBox ID="txtCHP" runat="server" Width="200px" /></td>
                                        </tr>
                                        <tr>
                                            <td>Jobs:</td>
                                            <td><dx:ASPxTextBox ID="txtJOBS" runat="server" Width="200px" /></td>
                                        </tr>
                                    </table>
                                    <div class="popup-button">
                                        <dx:ASPxButton ID="btnSave" runat="server" Text="儲存" AutoPostBack="false" OnClick="btnSave_Click" />
                                        <dx:ASPxButton ID="btnCancel" runat="server" Text="取消" AutoPostBack="false">
                                            <ClientSideEvents Click="function(s, e) { popupForm.Hide(); }" />
                                        </dx:ASPxButton>
                                    </div>
                                </dx:PanelContent>
                            </PanelCollection>
                        </dx:ASPxCallbackPanel>
                    </dx:PopupControlContentControl>
                </ContentCollection>
            </dx:ASPxPopupControl>

        </div>
    </form>
</body>
</html>

2. 後端程式碼（Default.aspx.cs）

using System;
using System.Data;
using Oracle.DataAccess.Client;

public partial class Default : System.Web.UI.Page
{
    private string connectionString = "User Id=your_user;Password=your_password;Data Source=your_datasource";
    private static int currentEditingId = 0;

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            LoadGridData();
        }
    }

    private void LoadGridData()
    {
        DataTable dt = new DataTable();
        using (OracleConnection conn = new OracleConnection(connectionString))
        {
            string query = "SELECT ID, FAB, EQP, CHP, JOBS FROM YOUR_TABLE ORDER BY ID DESC";
            using (OracleDataAdapter da = new OracleDataAdapter(query, conn))
            {
                da.Fill(dt);
            }
        }

        GridView.DataSource = dt;
        GridView.DataBind();
    }

    protected void btnAddNew_Click(object sender, EventArgs e)
    {
        // 清空欄位並顯示新增畫面
        txtFAB.Text = string.Empty;
        txtEQP.Text = string.Empty;
        txtCHP.Text = string.Empty;
        txtJOBS.Text = string.Empty;

        currentEditingId = 0; // 0 表示新增
        popupForm.ShowOnPageLoad = true;
    }

    protected void btnSave_Click(object sender, EventArgs e)
    {
        string fab = txtFAB.Text.Trim();
        string eqp = txtEQP.Text.Trim();
        string chp = txtCHP.Text.Trim();
        string jobs = txtJOBS.Text.Trim();

        if (eqp.Length > 5)
        {
            throw new Exception("EQP 必須 5 個字元內");
        }

        using (OracleConnection conn = new OracleConnection(connectionString))
        {
            conn.Open();
            string sql;
            if (currentEditingId == 0)
            {
                sql = "INSERT INTO YOUR_TABLE (ID, FAB, EQP, CHP, JOBS) VALUES (YOUR_SEQ.NEXTVAL, :FAB, :EQP, :CHP, :JOBS)";
            }
            else
            {
                sql = "UPDATE YOUR_TABLE SET FAB = :FAB, EQP = :EQP, CHP = :CHP, JOBS = :JOBS WHERE ID = :ID";
            }

            using (OracleCommand cmd = new OracleCommand(sql, conn))
            {
                cmd.Parameters.Add(":FAB", fab);
                cmd.Parameters.Add(":EQP", eqp);
                cmd.Parameters.Add(":CHP", chp);
                cmd.Parameters.Add(":JOBS", jobs);

                if (currentEditingId != 0)
                {
                    cmd.Parameters.Add(":ID", currentEditingId);
                }

                cmd.ExecuteNonQuery();
            }
        }

        popupForm.ShowOnPageLoad = false;
        LoadGridData();
    }

    protected void GridView_PageIndexChanged(object sender, EventArgs e)
    {
        LoadGridData();  // 頁面切換時重載資料
    }

    protected void CallbackPanelForm_Callback(object sender, DevExpress.Web.CallbackEventArgsBase e)
    {
        // 可選擇是否進一步控制 Callback
    }

    protected void GridView_CustomButtonCallback(object sender, DevExpress.Web.ASPxGridViewCustomButtonCallbackEventArgs e)
    {
        int id = Convert.ToInt32(GridView.GetRowValues(e.VisibleIndex, "ID"));
        currentEditingId = id;

        using (OracleConnection conn = new OracleConnection(connectionString))
        {
            conn.Open();
            string query = "SELECT FAB, EQP, CHP, JOBS FROM YOUR_TABLE WHERE ID = :ID";
            using (OracleCommand cmd = new OracleCommand(query, conn))
            {
                cmd.Parameters.Add(":ID", id);
                using (OracleDataReader reader = cmd.ExecuteReader())
                {
                    if (reader.Read())
                    {
                        txtFAB.Text = reader["FAB"].ToString();
                        txtEQP.Text = reader["EQP"].ToString();
                        txtCHP.Text = reader["CHP"].ToString();
                        txtJOBS.Text = reader["JOBS"].ToString();
                    }
                }
            }
        }

        popupForm.ShowOnPageLoad = true;
    }
}

3. CSS（Style.css）

body {
    font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f5f7fa;
    margin: 0;
}

.container {
    margin: 20px auto;
    width: 90%;
}

.button-bar {
    margin: 10px 0;
    text-align: right;
}

.btn-add {
    background-color: #007acc;
    color: white;
    border-radius: 4px;
    padding: 6px 12px;
    border: none;
    cursor: pointer;
}

.btn-add:hover {
    background-color: #005fa3;
}

.popup-form {
    width: 100%;
}

.popup-form td {
    padding: 5px;
}

.popup-button {
    margin-top: 10px;
    text-align: right;
}

.grid {
    margin-top: 10px;
}

.dxgvHeader_PlasticBlue {
    background-color: #007acc !important;
    color: #ffffff !important;
}

.dxgvDataRow_PlasticBlue {
    background-color: #ffffff;
}

.dxgvFocusedRow_PlasticBlue {
    background-color: #e6f7ff !important;
}

修正重點
	1.	分頁時無資料
加入 GridView_PageIndexChanged 事件，並於切頁時重新載入資料。
	2.	彈窗新增/編輯
ASPxPopupControl + ASPxCallbackPanel 做到無刷新跳窗填寫儲存。

後續可以強化
	•	權限檢查（Session[“ID”] 驗證）
	•	資料驗證與例外處理
	•	Ajax Call + JSON 傳遞 (更現代化)

如果有你目前用的資料表欄位或更細的邏輯需求，可以再調整！
如果你要完整專案壓縮包，告訴我！