你想要的是：當使用者在 ASPxComboBox（位於 GridViewToolbarItem.Template 裡）選擇不同的值時，即時觸發事件來重新篩選 ASPxGridView 的資料。

這在 DevExpress 19.2 + .NET 4.7.2 是可以做到的。下面是完整步驟和範例：

一、整體邏輯
	1.	你在 GridView 的 Toolbar 裡放一個 ComboBox。
	2.	當 ComboBox 選取變更 (SelectedIndexChanged)，透過 Callback 或 PostBack 更新 GridView 的資料來源。
	3.	根據 ComboBox 的值，在 GridView 的 DataSource 中進行篩選。

二、範例：GridView Toolbar + ComboBox 篩選

1. ASPX - GridView + Toolbar ComboBox

<dx:ASPxGridView ID="ASPxGridView1" runat="server" AutoGenerateColumns="False"
    OnDataBinding="ASPxGridView1_DataBinding">
    <Toolbars>
        <dx:GridViewToolbar>
            <Items>
                <dx:GridViewToolbarItem>
                    <Template>
                        <dx:ASPxComboBox ID="ddlFilter" runat="server"
                            AutoPostBack="true"
                            OnSelectedIndexChanged="ddlFilter_SelectedIndexChanged">
                            <Items>
                                <dx:ListEditItem Text="All" Value="" />
                                <dx:ListEditItem Text="CHP A" Value="A" />
                                <dx:ListEditItem Text="CHP B" Value="B" />
                            </Items>
                        </dx:ASPxComboBox>
                    </Template>
                </dx:GridViewToolbarItem>
            </Items>
        </dx:GridViewToolbar>
    </Toolbars>
    <Columns>
        <dx:GridViewDataTextColumn FieldName="chp" Caption="CHP" />
        <dx:GridViewDataTextColumn FieldName="layer" Caption="Layer" />
        <dx:GridViewDataTextColumn FieldName="pr" Caption="PR" />
    </Columns>
</dx:ASPxGridView>

2. 後端 Code-behind (C#)

// 儲存 ComboBox 選項
protected string SelectedCHP
{
    get { return Session["SelectedCHP"]?.ToString() ?? ""; }
    set { Session["SelectedCHP"] = value; }
}

// 資料綁定事件
protected void ASPxGridView1_DataBinding(object sender, EventArgs e)
{
    var grid = sender as ASPxGridView;

    // 模擬資料來源
    var data = GetSampleData();

    // 根據 ComboBox 選擇篩選
    if (!string.IsNullOrEmpty(SelectedCHP))
    {
        data = data.Where(x => x.chp == SelectedCHP).ToList();
    }

    grid.DataSource = data;
}

// ComboBox 選項改變
protected void ddlFilter_SelectedIndexChanged(object sender, EventArgs e)
{
    var ddl = sender as ASPxComboBox;
    SelectedCHP = ddl.Value?.ToString();

    ASPxGridView1.DataBind(); // 重新綁定 Grid
}

3. 模擬資料方法（可放在後端）

private List<MyItem> GetSampleData()
{
    return new List<MyItem>
    {
        new MyItem { chp = "A", layer = "L1", pr = 10 },
        new MyItem { chp = "A", layer = "L2", pr = 20 },
        new MyItem { chp = "B", layer = "L1", pr = 30 },
        new MyItem { chp = "B", layer = "L2", pr = 40 },
    };
}

public class MyItem
{
    public string chp { get; set; }
    public string layer { get; set; }
    public int pr { get; set; }
}

三、補充
	•	如果你不想用 Session，也可以用 ViewState 或傳值機制儲存選項。
	•	若你希望是 AJAX 無刷新更新，也可以用 ASPxCallbackPanel 或 grid.PerformCallback()，我也可以幫你改成這種方式。

要不要我幫你改成用 CallbackPanel 或 Client-Side JavaScript 的版本？這樣會更流暢、不用重新載入整個頁面。