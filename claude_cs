// 用於儲存臨時組合的頻率值
private string _tempCombinedFrequency;

protected void gridFrequency_Init(object sender, EventArgs e)
{
    // 初始化暫存值
    _tempCombinedFrequency = "1/1D";
}

protected void gridFrequency_CustomCallback(object sender, ASPxGridViewCustomCallbackEventArgs e)
{
    // 處理自定義回調
    string[] parameters = e.Parameters.Split('|');
    if (parameters.Length >= 2 && parameters[0] == "SETFREQUENCY")
    {
        _tempCombinedFrequency = parameters[1];
    }
}

protected void gridFrequency_RowInserting(object sender, DevExpress.Web.Data.ASPxDataInsertingEventArgs e)
{
    try
    {
        // 使用暫存的組合頻率值
        string frequency = _tempCombinedFrequency;
        
        // 如果暫存值是空的，嘗試從插入值中構建頻率
        if (string.IsNullOrEmpty(frequency) || frequency == "1/1D")
        {
            // 嘗試取得每個控件的值 (通常這裡是取不到的，所以我們使用前面暫存的值)
            try
            {
                ASPxGridView grid = sender as ASPxGridView;
                GridViewEditFormTemplateContainer container = grid.FindEditFormTemplateContainer();
                
                if (container != null)
                {
                    ASPxSpinEdit txtFreqCount = container.FindControl("txtFreqCount") as ASPxSpinEdit;
                    ASPxSpinEdit txtFreqUnitCount = container.FindControl("txtFreqUnitCount") as ASPxSpinEdit;
                    ASPxComboBox cmbFreqUnit = container.FindControl("cmbFreqUnit") as ASPxComboBox;
                    
                    if (txtFreqCount != null && txtFreqUnitCount != null && cmbFreqUnit != null)
                    {
                        int freqCount = Convert.ToInt32(txtFreqCount.Value);
                        int unitCount = Convert.ToInt32(txtFreqUnitCount.Value);
                        string unit = cmbFreqUnit.Value.ToString();
                        
                        frequency = string.Format("{0}/{1}{2}", freqCount, unitCount, unit);
                    }
                }
            }
            catch (Exception ex)
            {
                // 記錄錯誤但繼續使用前面暫存的值
                System.Diagnostics.Debug.WriteLine($"無法從編輯模板獲取控件值: {ex.Message}");
            }
        }
        
        // 將組合後的頻率值加入到e.NewValues中
        e.NewValues["FREQUENCY"] = frequency;
        
        // 執行插入操作
        using (SqlConnection conn = new SqlConnection(GetConnectionString()))
        {
            conn.Open();
            using (SqlCommand cmd = new SqlCommand())
            {
                cmd.Connection = conn;
                cmd.CommandType = CommandType.Text;
                cmd.CommandText = "INSERT INTO YourTable (FREQUENCY) VALUES (@FREQUENCY)";
                
                cmd.Parameters.AddWithValue("@FREQUENCY", frequency);
                
                cmd.ExecuteNonQuery();
            }
        }
        
        // 重置暫存值
        _tempCombinedFrequency = "1/1D";
        
        // 取消 GridView 默認的插入操作，因為我們已經手動處理了
        e.Cancel = true;
        
        // 重新綁定網格以顯示新數據
        BindGrid();
    }
    catch (Exception ex)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "alertMessage", 
            $"alert('插入數據時發生錯誤: {ex.Message.Replace("'", "\\'")}');", true);
        e.Cancel = true;
    }
}

protected void gridFrequency_RowUpdating(object sender, DevExpress.Web.Data.ASPxDataUpdatingEventArgs e)
{
    try
    {
        // 使用與插入類似的邏輯，利用暫存的頻率值
        string frequency = _tempCombinedFrequency;
        
        // 也可以嘗試從 UpdateValues 中獲取值，與上面插入方法類似
        
        // 執行更新操作
        using (SqlConnection conn = new SqlConnection(GetConnectionString()))
        {
            conn.Open();
            using (SqlCommand cmd = new SqlCommand())
            {
                cmd.Connection = conn;
                cmd.CommandType = CommandType.Text;
                cmd.CommandText = "UPDATE YourTable SET FREQUENCY = @FREQUENCY WHERE ID = @ID";
                
                cmd.Parameters.AddWithValue("@FREQUENCY", frequency);
                cmd.Parameters.AddWithValue("@ID", e.Keys["ID"]);
                
                cmd.ExecuteNonQuery();
            }
        }
        
        // 重置暫存值
        _tempCombinedFrequency = "1/1D";
        
        // 取消 GridView 默認的更新操作
        e.Cancel = true;
        
        // 重新綁定網格
        BindGrid();
    }
    catch (Exception ex)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "alertMessage", 
            $"alert('更新數據時發生錯誤: {ex.Message.Replace("'", "\\'")}');", true);
        e.Cancel = true;
    }
}
