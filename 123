<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="YourPage.aspx.cs" Inherits="YourNamespace.YourPage" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>频率设置页面</title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
            <dx:ASPxGridView ID="GridView1" runat="server" AutoGenerateColumns="False" 
                KeyFieldName="ID" OnRowCommand="GridView1_RowCommand"
                OnRowEditing="GridView1_RowEditing" 
                OnRowCancelingEdit="GridView1_RowCancelingEdit"
                OnRowUpdating="GridView1_RowUpdating" 
                OnRowDeleting="GridView1_RowDeleting"
                OnRowDataBound="GridView1_RowDataBound">
                <Columns>
                    <dx:GridViewDataTextColumn FieldName="ID" Caption="ID" ReadOnly="true">
                    </dx:GridViewDataTextColumn>
                    
                    <!-- 其他列 -->
                    
                    <dx:GridViewDataColumn FieldName="FREQUENCY" Caption="频率">
                        <DataItemTemplate>
                            <asp:Label ID="lblFrequency" runat="server" Text='<%# FormatFrequency(Eval("FREQUENCY")) %>'></asp:Label>
                        </DataItemTemplate>
                        <EditItemTemplate>
                            <div>
                                <dx:ASPxSpinEdit ID="txtFreqCount" runat="server" 
                                    Value='<%# GetFreqValue(Eval("FREQUENCY")) %>' 
                                    MinValue="1" MaxValue="99" Width="60px">
                                </dx:ASPxSpinEdit>
                                
                                <dx:ASPxSpinEdit ID="txtFreqUnitCount" runat="server" 
                                    Value='<%# GetFreqUnitCountValue(Eval("FREQUENCY")) %>' 
                                    MinValue="1" MaxValue="99" Width="60px">
                                </dx:ASPxSpinEdit>
                                
                                <dx:ASPxComboBox ID="cmbFreqUnit" runat="server" 
                                    Value='<%# GetFreqUnitValue(Eval("FREQUENCY")) %>' 
                                    Width="80px">
                                    <Items>
                                        <dx:ListEditItem Text="天" Value="D" />
                                        <dx:ListEditItem Text="週" Value="W" />
                                    </Items>
                                </dx:ASPxComboBox>
                            </div>
                        </EditItemTemplate>
                    </dx:GridViewDataColumn>
                    
                    <dx:GridViewCommandColumn Caption="操作" ShowEditButton="true" ShowDeleteButton="true">
                    </dx:GridViewCommandColumn>
                </Columns>
            </asp:GridView>
            
            <br />
            <h3>添加新记录</h3>
            <table>
                <!-- 其他字段的输入控件 -->
                <tr>
                    <td>频率:</td>
                    <td>
                        <dx:ASPxSpinEdit ID="txtInsertFreqCount" runat="server" 
                            MinValue="1" MaxValue="99" Width="60px" Value="1">
                        </dx:ASPxSpinEdit>
                        
                        <dx:ASPxSpinEdit ID="txtInsertFreqUnitCount" runat="server" 
                            MinValue="1" MaxValue="99" Width="60px" Value="1">
                        </dx:ASPxSpinEdit>
                        
                        <dx:ASPxComboBox ID="cmbInsertFreqUnit" runat="server" Width="80px">
                            <Items>
                                <dx:ListEditItem Text="天" Value="D" />
                                <dx:ListEditItem Text="週" Value="W" />
                            </Items>
                        </dx:ASPxComboBox>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <asp:Button ID="btnInsert" runat="server" Text="添加" OnClick="btnInsert_Click" />
                    </td>
                </tr>
            </table>
        </div>
    </form>
</body>
</html>

using System;
using System.Data;
using System.Data.SqlClient;
using System.Web.UI;
using System.Web.UI.WebControls;
using DevExpress.Web;

namespace YourNamespace
{
    public partial class YourPage : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                BindGrid();
            }
        }

        private void BindGrid()
        {
            // 使用数据库连接获取数据
            DataTable dt = GetDataFromDB();
            GridView1.DataSource = dt;
            GridView1.DataBind();
        }

        private DataTable GetDataFromDB()
        {
            // 这里是示例，请替换为您的实际数据库连接和查询
            DataTable dt = new DataTable();
            using (SqlConnection conn = new SqlConnection(GetConnectionString()))
            {
                using (SqlCommand cmd = new SqlCommand("SELECT * FROM YourTable", conn))
                {
                    conn.Open();
                    SqlDataAdapter adapter = new SqlDataAdapter(cmd);
                    adapter.Fill(dt);
                }
            }
            return dt;
        }

        private string GetConnectionString()
        {
            // 返回您的数据库连接字符串
            return System.Configuration.ConfigurationManager.ConnectionStrings["YourConnectionString"].ConnectionString;
        }

        #region 频率处理方法

        // 格式化频率显示
        protected string FormatFrequency(object frequencyValue)
        {
            if (frequencyValue == null || frequencyValue == DBNull.Value)
                return string.Empty;
            
            string frequency = frequencyValue.ToString();
            // 假设格式为: 1|1|D (每1天执行1次)
            try
            {
                string[] parts = frequency.Split('|');
                if (parts.Length >= 3)
                {
                    int freqCount = Convert.ToInt32(parts[0]);
                    int freqUnitCount = Convert.ToInt32(parts[1]);
                    string freqUnit = parts[2];

                    string unitText = freqUnit == "D" ? "天" : "週";
                    return string.Format("每{0}{1}执行{2}次", freqCount, unitText, freqUnitCount);
                }
            }
            catch
            {
                // 处理异常情况
            }
            
            return frequency;
        }

        // 获取频率计数值
        protected object GetFreqValue(object frequencyValue)
        {
            if (frequencyValue == null || frequencyValue == DBNull.Value)
                return 1;
            
            string frequency = frequencyValue.ToString();
            try
            {
                string[] parts = frequency.Split('|');
                if (parts.Length >= 1)
                {
                    return Convert.ToInt32(parts[0]);
                }
            }
            catch
            {
                // 处理异常情况
            }
            
            return 1;
        }

        // 获取频率单位计数值
        protected object GetFreqUnitCountValue(object frequencyValue)
        {
            if (frequencyValue == null || frequencyValue == DBNull.Value)
                return 1;
            
            string frequency = frequencyValue.ToString();
            try
            {
                string[] parts = frequency.Split('|');
                if (parts.Length >= 2)
                {
                    return Convert.ToInt32(parts[1]);
                }
            }
            catch
            {
                // 处理异常情况
            }
            
            return 1;
        }

        // 获取频率单位值
        protected object GetFreqUnitValue(object frequencyValue)
        {
            if (frequencyValue == null || frequencyValue == DBNull.Value)
                return "D";
            
            string frequency = frequencyValue.ToString();
            try
            {
                string[] parts = frequency.Split('|');
                if (parts.Length >= 3)
                {
                    return parts[2];
                }
            }
            catch
            {
                // 处理异常情况
            }
            
            return "D";
        }

        // 组合频率值
        private string CombineFrequencyValue(int freqCount, int freqUnitCount, string freqUnit)
        {
            return string.Format("{0}|{1}|{2}", freqCount, freqUnitCount, freqUnit);
        }

        #endregion

        #region GridView 事件处理

        protected void GridView1_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            // 如果需要额外的命令处理
            if (e.CommandName == "CustomCommand")
            {
                // 处理自定义命令
            }
        }

        protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)
        {
            GridView1.EditIndex = e.NewEditIndex;
            BindGrid();
        }

        protected void GridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            GridView1.EditIndex = -1;
            BindGrid();
        }

        protected void GridView1_RowUpdating(object sender, ASPxDataUpdatingEventArgs e)
        {
            // 获取正在编辑的行
            ASPxGridView gridView = (ASPxGridView)sender;
            
            // 获取ID
            string id = e.Keys["ID"].ToString();
            
            // 获取频率控件
            ASPxSpinEdit txtFreqCount = (ASPxSpinEdit)gridView.FindEditRowCellTemplateControl(
                gridView.Columns["FREQUENCY"] as GridViewDataColumn, "txtFreqCount");
            ASPxSpinEdit txtFreqUnitCount = (ASPxSpinEdit)gridView.FindEditRowCellTemplateControl(
                gridView.Columns["FREQUENCY"] as GridViewDataColumn, "txtFreqUnitCount");
            ASPxComboBox cmbFreqUnit = (ASPxComboBox)gridView.FindEditRowCellTemplateControl(
                gridView.Columns["FREQUENCY"] as GridViewDataColumn, "cmbFreqUnit");
            
            // 获取频率值
            int freqCount = Convert.ToInt32(txtFreqCount.Value);
            int freqUnitCount = Convert.ToInt32(txtFreqUnitCount.Value);
            string freqUnit = cmbFreqUnit.Value.ToString();
            
            // 组合频率值
            string frequency = CombineFrequencyValue(freqCount, freqUnitCount, freqUnit);
            
            // 更新数据库
            UpdateRecord(id, frequency);
            
            // 取消编辑状态
            e.Cancel = true;
            gridView.CancelEdit();
            BindGrid();
        }

        protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {
            string id = GridView1.DataKeys[e.RowIndex].Value.ToString();
            DeleteRecord(id);
            BindGrid();
        }

        protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            // 如果需要在绑定数据时执行额外操作
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                // 处理数据行
            }
        }

        #endregion

        #region 数据库操作

        private void UpdateRecord(string id, string frequency)
        {
            using (SqlConnection conn = new SqlConnection(GetConnectionString()))
            {
                string sql = "UPDATE YourTable SET FREQUENCY = @Frequency WHERE ID = @ID";
                using (SqlCommand cmd = new SqlCommand(sql, conn))
                {
                    cmd.Parameters.AddWithValue("@Frequency", frequency);
                    cmd.Parameters.AddWithValue("@ID", id);
                    
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
            }
        }

        private void DeleteRecord(string id)
        {
            using (SqlConnection conn = new SqlConnection(GetConnectionString()))
            {
                string sql = "DELETE FROM YourTable WHERE ID = @ID";
                using (SqlCommand cmd = new SqlCommand(sql, conn))
                {
                    cmd.Parameters.AddWithValue("@ID", id);
                    
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
            }
        }

        #endregion

        // 插入事件处理 - 这是您请求的关键部分
        protected void btnInsert_Click(object sender, EventArgs e)
        {
            try
            {
                // 获取频率控件值
                int freqCount = Convert.ToInt32(txtInsertFreqCount.Value);
                int freqUnitCount = Convert.ToInt32(txtInsertFreqUnitCount.Value);
                string freqUnit = cmbInsertFreqUnit.Value.ToString();
                
                // 组合频率值
                string frequency = CombineFrequencyValue(freqCount, freqUnitCount, freqUnit);
                
                // 插入记录
                InsertRecord(frequency);
                
                // 重新绑定数据
                BindGrid();
                
                // 清空输入框
                ClearInputControls();
            }
            catch (Exception ex)
            {
                // 处理异常
                ScriptManager.RegisterStartupScript(this, GetType(), "AlertScript", 
                    $"alert('插入失败: {ex.Message}');", true);
            }
        }

        private void InsertRecord(string frequency)
        {
            using (SqlConnection conn = new SqlConnection(GetConnectionString()))
            {
                // 假设有其他字段需要插入，这里仅演示频率字段
                string sql = "INSERT INTO YourTable (FREQUENCY) VALUES (@Frequency)";
                
                using (SqlCommand cmd = new SqlCommand(sql, conn))
                {
                    cmd.Parameters.AddWithValue("@Frequency", frequency);
                    
                    conn.Open();
                    cmd.ExecuteNonQuery();
                }
            }
        }

        private void ClearInputControls()
        {
            txtInsertFreqCount.Value = 1;
            txtInsertFreqUnitCount.Value = 1;
            cmbInsertFreqUnit.SelectedIndex = 0; // 默认选择第一项
        }
    }
}