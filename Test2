要將 `.ppt` 和 `.xls` 檔案以 BLOB 形式存入 Oracle 資料庫，您需要進行以下步驟：

### 後端 (.NET 4.6.2)

1. **上傳檔案並存入 Oracle：**

   - 使用 ADO.NET 或其他資料庫連接方法，將檔案內容以 BLOB 形式存入資料庫。
   - 範例程式碼：
     ```csharp
     [HttpPost]
     public IHttpActionResult UploadFile()
     {
         var httpRequest = HttpContext.Current.Request;
         var postedFile = httpRequest.Files["file"];
         var id = httpRequest.Form["id"];

         if (postedFile != null && postedFile.ContentLength > 0)
         {
             using (var connection = new OracleConnection("your_connection_string"))
             {
                 connection.Open();
                 using (var command = new OracleCommand("UPDATE customer_special SET file_data = :fileData WHERE id = :id", connection))
                 {
                     command.Parameters.Add(new OracleParameter("fileData", OracleDbType.Blob)).Value = postedFile.InputStream;
                     command.Parameters.Add(new OracleParameter("id", OracleDbType.Int32)).Value = Convert.ToInt32(id);
                     
                     command.ExecuteNonQuery();
                 }
             }

             return Ok(new { success = true });
         }

         return BadRequest(new { success = false });
     }
     ```

2. **下載檔案從 Oracle：**

   - 從資料庫檢索 BLOB 並返回給用戶端。
   - 範例程式碼：
     ```csharp
     [HttpGet]
     public IHttpActionResult DownloadFile(int id)
     {
         using (var connection = new OracleConnection("your_connection_string"))
         {
             connection.Open();
             using (var command = new OracleCommand("SELECT file_data FROM customer_special WHERE id = :id", connection))
             {
                 command.Parameters.Add(new OracleParameter("id", OracleDbType.Int32)).Value = id;

                 var reader = command.ExecuteReader();
                 if (reader.Read())
                 {
                     var blob = reader.GetOracleBlob(0);
                     byte[] fileData = blob.Value;

                     var result = new HttpResponseMessage(HttpStatusCode.OK)
                     {
                         Content = new ByteArrayContent(fileData)
                     };
                     result.Content.Headers.ContentDisposition = new ContentDispositionHeaderValue("attachment")
                     {
                         FileName = "downloaded_file.ppt" // 或 xls，根據實際檔案類型
                     };
                     result.Content.Headers.ContentType = new MediaTypeHeaderValue("application/octet-stream");

                     return ResponseMessage(result);
                 }
             }
         }

         return NotFound();
     }
     ```

### 前端 (Vue 2.6)

1. **上傳檔案：**

   - 使用 `FormData` 將檔案發送到後端。
   ```javascript
   methods: {
     HandleFileChange(event) {
       const file = event.target.files[0];
       this.selectedFile = file;
       this.data.FILE_NAME = file.name;
     },

     uploadFile(id) {
       if (!this.selectedFile) {
         this.$message.error('請選擇檔案');
         return;
       }

       const formData = new FormData();
       formData.append('file', this.selectedFile);
       formData.append('id', id);

       const apiurl = this.Parse.ApiUrl('BaseData', 'UploadFile');
       this.Tools.CallApi(apiurl.url, apiurl.method, formData, (response) => {
         if (response.success) {
           this.$message.success('檔案上傳成功');
         } else {
           this.$message.error('檔案上傳失敗');
         }
       });
     }
   }
   ```

2. **下載檔案：**

   - 呼叫後端 API 並處理返回的 BLOB。
   ```javascript
   methods: {
     downloadFile(id) {
       const apiurl = this.Parse.ApiUrl('BaseData', 'DownloadFile');
       this.Tools.CallApi(apiurl.url, apiurl.method, { id }, (response) => {
         if (response.success) {
           const url = URL.createObjectURL(new Blob([response.data]));
           const link = document.createElement('a');
           link.href = url;
           link.setAttribute('download', response.fileName);
           document.body.appendChild(link);
           link.click();
           link.remove();
         } else {
           this.$message.error('檔案下載失敗');
         }
       });
     }
   }
   ```

### 總結

- 在 Oracle 中使用 BLOB 欄位來儲存檔案資料。
- 後端處理檔案上傳和下載邏輯，並與資料庫互動。
- 前端負責檔案選擇、上傳和下載操作。

確保您的資料庫連接字串和查詢語句正確無誤。
